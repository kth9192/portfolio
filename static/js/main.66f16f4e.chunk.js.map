{"version":3,"sources":["page/infoPage.js","data.js","components/pager.js","components/detailModal.js","components/detailBtn.js","components/projectItem.js","page/projectsPage.js","components/headerBar.js","routes.js","App.js","index.js"],"names":["InfoPage","props","state","SectionBoxA","className","SectionSpacer","Component","styled","section","hr","projects","id","name","img","description","stack","url","Cover","div","Body","CardImg","Indicator","button","Pager","useState","minColor","setMinColor","maxColor","setMaxColor","useEffect","limitObj","onClick","moveFront","size","color","src","alt","title","moveEnd","Background","ModalCover","Modal","ModalHeader","Content","Title","p","ModalFooter","ButtonWrap","DetailModal","ref","useRef","handler","listener","event","current","contains","target","console","log","document","addEventListener","removeEventListener","useOnClick","closeModal","idx","setidx","data","setImg","limit","setLimit","ReactDOM","createPortal","isOpen","e","stopPropagation","preventDefault","length","getElementById","ButtonBody","DetailContent","DetailBtn","isModalOpen","setModalOpen","classList","ProjectBox","ProjectItem","href","ProjectsPage","SectionBoxB","ProjectInfo","map","project","key","TopMenu","NavGrid","LinkBtn","LinkBoxContent","CustomLink","Link","withRouter","to","window","location","exact","path","component","App","GlobalStyle","createGlobalStyle","render"],"mappings":"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","file":"static/js/main.66f16f4e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nclass InfoPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SectionBoxA className=\"about\">\r\n        <h1>About</h1>\r\n        <SectionSpacer />\r\n        <div>\r\n          <p>KIM TAE HOON</p>\r\n          <p>제주대학교 컴퓨터공학전공 학사 졸업 </p>\r\n          <p>Email : kth9193@gmail.com</p>\r\n          <p>Github : https://github.com/kth9192</p>\r\n        </div>\r\n      </SectionBoxA>\r\n    );\r\n  }\r\n}\r\n\r\nconst SectionBoxA = styled.section`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60vh;\r\n  background-color: #f8f8f8;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  float: left;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  h1 {\r\n    font-size: 30px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst SectionSpacer = styled.hr`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border: 0;\r\n  width: 300px;\r\n  border-top: 3px solid #e7e7e7;\r\n  text-align: center;\r\n`;\r\n\r\nexport default InfoPage;\r\n","const projects = [\r\n  {\r\n    id: 0,\r\n    name: \"유튜브 클립 저장소\",\r\n    img: [\"youtube-cutter.png\", \"youtube-cutter2.png\", \"youtube-cutter3.png\"],\r\n    description:\r\n      \"유튜브 영상의 특정 시간대를 저장하고 하나의 목록으로 분류해 관리할 수 있는 페이지. \",\r\n    stack:\r\n      \"create react app, nodejs , graphQL , react router, react hook , grahql apollo, JWT\",\r\n    url: \"http://youtube-cutter.herokuapp.com/\"\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"SquardMaker\",\r\n    img: [\r\n      \"squardmaker.png\",\r\n      \"squardmaker2.png\",\r\n      \"squardmaker3.png\",\r\n      \"squardmaker4.png\"\r\n    ],\r\n    description:\r\n      \"축구팀을 위한 명단 제작 사이트. 팀 명단을 만들고 포메이션과 등번호를 정할 수 있다. 본인의 팀 명단을 바둑돌처럼 활용해 전술 구상도 해볼수 있다.\",\r\n    stack: \"vanila js, nodejs redis session , passport, axios \",\r\n    url: \"http://squardmaker.herokuapp.com/\"\r\n  }\r\n];\r\n\r\nexport default projects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\r\n\r\nconst Pager = props => {\r\n  const [minColor, setMinColor] = useState(\"black\");\r\n  const [maxColor, setMaxColor] = useState(\"black\");\r\n\r\n  useEffect(() => {\r\n    if (props.limitObj === \"front\") {\r\n      setMinColor(\"gray\");\r\n      setMaxColor(\"black\");\r\n    } else if (props.limitObj === \"end\") {\r\n      setMinColor(\"black\");\r\n      setMaxColor(\"gray\");\r\n    } else {\r\n      setMinColor(\"black\");\r\n      setMaxColor(\"black\");\r\n    }\r\n  }, [maxColor, props.limitObj]);\r\n\r\n  return (\r\n    <Cover>\r\n      <Indicator id=\"frontIndicator\" onClick={props.moveFront}>\r\n        <IoIosArrowBack size={40} color={minColor} />\r\n      </Indicator>\r\n      <Body>\r\n        <CardImg src={props.img} alt={props.title} />\r\n      </Body>\r\n      <Indicator id=\"endIndicator\" onClick={props.moveEnd}>\r\n        <IoIosArrowForward size={40} color={maxColor} />\r\n      </Indicator>\r\n    </Cover>\r\n  );\r\n};\r\n\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: flex;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  bottom: 0;\r\n`;\r\n\r\nconst CardImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Indicator = styled.button`\r\n  width: 50px;\r\n  height: 100%;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Pager;\r\n","import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Pager from \"./pager\";\r\n\r\nconst DetailModal = props => {\r\n  const ref = useRef();\r\n  useOnClick(ref, props.closeModal);\r\n\r\n  const [idx, setidx] = useState(0);\r\n  const [img, setImg] = useState(props.data[0]);\r\n  const [limit, setLimit] = useState(\"front\");\r\n\r\n  const moveFront = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (idx - 1 >= 0) {\r\n      setidx(idx - 1);\r\n      setLimit(null);\r\n    } else {\r\n      setLimit(\"front\");\r\n    }\r\n  };\r\n\r\n  const moveEnd = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (idx + 1 < props.data.length) {\r\n      setidx(idx + 1);\r\n      setLimit(null);\r\n    } else {\r\n      setLimit(\"end\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"====================================\");\r\n    console.log(\"idx?\", idx);\r\n    console.log(\"====================================\");\r\n\r\n    setImg(props.data[idx]);\r\n  }, [idx, props.data]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <Fragment>\r\n      {props.isOpen ? (\r\n        <Background className=\"close\" onClick={e => props.closeModal(e)}>\r\n          <ModalCover>\r\n            <Modal ref={ref}>\r\n              <ModalHeader>\r\n                <Title>{props.title}</Title>\r\n              </ModalHeader>\r\n              <Content>\r\n                <Pager\r\n                  img={img}\r\n                  moveFront={moveFront}\r\n                  moveEnd={moveEnd}\r\n                  title={props.title}\r\n                  limitObj={limit}\r\n                ></Pager>\r\n              </Content>\r\n              <ModalFooter>\r\n                <ButtonWrap>\r\n                  <button className=\"close\" onClick={e => props.closeModal(e)}>\r\n                    닫기\r\n                  </button>\r\n                </ButtonWrap>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </ModalCover>\r\n        </Background>\r\n      ) : null}\r\n    </Fragment>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n};\r\n\r\nfunction useOnClick(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        console.log(\"====================================\");\r\n        console.log(ref);\r\n        console.log(\"====================================\");\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [handler, ref]); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  margin: 0px auto;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ModalCover = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 60rem;\r\n  height: 40rem;\r\n  /* min-width: 400px;\r\n  min-height: 300px; */\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  position: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\r\n  /* & > * {\r\n    &:first-child {\r\n      margin-top: 16px;\r\n    }\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n  } */\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid #bebebe;\r\n  height: 10%;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 80%;\r\n  margin: 0;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-weight: bold;\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  margin: 0;\r\n  margin-top: 8px;\r\n  button {\r\n    width: 100%;\r\n    padding: 12px 0;\r\n    border-radius: 0 0 10px 10px;\r\n    background-color: #ad7cef;\r\n    font-size: 13px;\r\n    color: white;\r\n    border: 0;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #7f49c8;\r\n    }\r\n    &:active {\r\n      background-color: #7e49c8;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DetailModal;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport DetailModal from \"./detailModal\";\r\n\r\nfunction DetailBtn(props) {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (e.target.classList.contains(\"close\")) {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonBody onClick={openModal}>\r\n      <DetailContent>\r\n        <p>자세히</p>\r\n        <DetailModal\r\n          isOpen={isModalOpen}\r\n          closeModal={closeModal}\r\n          url={props.url}\r\n          title={props.title}\r\n          data={props.data}\r\n        />\r\n      </DetailContent>\r\n    </ButtonBody>\r\n  );\r\n}\r\n\r\nconst ButtonBody = styled.div`\r\n  display: flex;\r\n  width: 100px;\r\n  height: 50px;\r\n  margin: 8px;\r\n\r\n  justify-content: center;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DetailContent = styled.button`\r\n  display: flex;\r\n  width: 100px;\r\n  height: 50px;\r\n  justify-content: center;\r\n  background-color: #ad7cef;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.4s;\r\n\r\n  p {\r\n    text-align: center;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:link,\r\n  &:visited {\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    padding: 15px 40px;\r\n    display: inline-block;\r\n    border-radius: 100px;\r\n    transition: all 0.2s;\r\n    position: absolute;\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n\r\n    width: 100px;\r\n    height: 50px;\r\n    border-radius: 100px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  &:hover {\r\n    &::after {\r\n      background-color: #ad7cef;\r\n\r\n      transform: scaleX(1.4) scaleY(1.6);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst icons = {\r\n  margin: \"0 1rem\",\r\n  cursor: \"pointer\"\r\n};\r\n\r\nexport default DetailBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport DetailBtn from \"./detailBtn\";\r\n\r\nfunction ProjectItem({ id, name, img, description, stack, url }) {\r\n  return (\r\n    <ProjectBox>\r\n      <h2>{name}</h2>\r\n      <p>{description}</p>\r\n      <h4>- STACK</h4>\r\n      <p>{stack}</p>\r\n      <DetailBtn title={name} data={img} />\r\n      <p>\r\n        링크 -<a href={url}>{url}</a>\r\n      </p>\r\n    </ProjectBox>\r\n  );\r\n}\r\n\r\nconst ProjectBox = styled.div`\r\n  width: 80%;\r\n  height: fit-content;\r\n  border-bottom: 1px solid black;\r\n  margin: 1rem 10px;\r\n  img {\r\n    width: 18.75rem;\r\n    height: 14.0625rem;\r\n  }\r\n`;\r\n\r\nProjectItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  img: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  description: PropTypes.string\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProjectInfo from \"../data\";\r\nimport ProjectItem from \"../components/projectItem\";\r\n\r\nclass ProjectsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <SectionBoxB className=\"projects\">\r\n        <h1>Project</h1>\r\n        <SectionSpacer />\r\n        {ProjectInfo.map(project => {\r\n          return (\r\n            <ProjectItem\r\n              key={project.id}\r\n              id={project.id}\r\n              name={project.name}\r\n              img={project.img}\r\n              description={project.description}\r\n              stack={project.stack}\r\n              url={project.url}\r\n            />\r\n          );\r\n        })}\r\n      </SectionBoxB>\r\n    );\r\n  }\r\n}\r\n\r\nconst SectionBoxB = styled.section`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  float: left;\r\n  h1 {\r\n    font-size: 30px;\r\n    text-align: center;\r\n  }\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nconst SectionSpacer = styled.hr`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border: 0;\r\n  width: 300px;\r\n  border-top: 3px solid #e7e7e7;\r\n  text-align: center;\r\n`;\r\n\r\nexport default ProjectsPage;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nfunction HeaderBar() {\r\n  const MenuBar = () => {\r\n    const moveTo = e => {\r\n      const target = document.querySelectorAll(\".\" + e.target.className)[1];\r\n      target.scrollIntoView();\r\n    };\r\n\r\n    return (\r\n      <TopMenu className=\"menu\">\r\n        <p className=\"linkBox__txt\">PORTPOILO</p>\r\n        <NavGrid>\r\n          <CustomLink to=\"/\">\r\n            <div className=\"about\">소개</div>\r\n          </CustomLink>\r\n          <CustomLink to=\"/projects\">\r\n            <div className=\"projects\">프로젝트</div>\r\n          </CustomLink>\r\n        </NavGrid>\r\n      </TopMenu>\r\n    );\r\n  };\r\n\r\n  const goGit = e => {\r\n    window.location = \"https://github.com/kth9192\";\r\n  };\r\n\r\n  return (\r\n    <Cover className=\"cover\">\r\n      <MenuBar />\r\n      <LinkBoxContent>\r\n        <LinkBtn onClick={goGit}>\r\n          <img src=\"gitHub-Mark-32px.png\" alt=\"github\" />\r\n          <p>GitHub로 이동하기</p>\r\n        </LinkBtn>\r\n      </LinkBoxContent>\r\n    </Cover>\r\n  );\r\n}\r\n\r\nconst TopMenu = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: fit-content;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  p {\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 50px;\r\n    border-bottom: 1px solid;\r\n  }\r\n`;\r\n\r\nconst NavGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  width: 50%;\r\n  text-align: center;\r\n  color: white;\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    height: 2rem;\r\n    &:hover {\r\n      background-color: #fff;\r\n      color: #000;\r\n      font-weight: bold;\r\n      transition: 400ms ease;\r\n      transition-property: background-color;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Cover = styled.section`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 25rem;\r\n  float: left;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-image: url(\"intro-bg.png\");\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst LinkBtn = styled.button`\r\n  display: flex;\r\n  width: 80%;\r\n  height: fit-content;\r\n  border: 2px white solid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: all 0.5s ease;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n    border: 1px black solid;\r\n    font-weight: bold;\r\n    img {\r\n      filter: invert(0);\r\n    }\r\n    p {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  img {\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 4px;\r\n    filter: invert(1);\r\n  }\r\n`;\r\n\r\nconst LinkBoxContent = styled.div`\r\n  display: flex;\r\n  width: 40%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .linkBox__txt {\r\n    color: white;\r\n    font-size: 50px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst CustomLink = styled(Link)`\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #fff;\r\n`;\r\n\r\nexport default withRouter(HeaderBar);\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { InfoPage, ProjectsPage } from \"./page\";\r\nimport HeaderBar from \"./components/headerBar\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <HeaderBar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={InfoPage} />\r\n        <Route path=\"/projects\" component={ProjectsPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React, { Component, Fragment } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Routes from \"./routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <GlobalStyle />\n        <Routes />\n      </Fragment>\n    );\n  }\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n       font-family: \"NanumBarunGothic\";\n       src: url('font/NanumBarunGothic.ttf') format('truetype');\n     }\n \n    html,body,#root {\n        padding: 0;\n        margin: 0;\n        height:100vh;\n        z-index:1;\n        font-family:나눔고딕, NanumBarunGothic, ng;\n    }\n\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}