{"version":3,"sources":["pager.js","detailModal.js","detailBtn.js","projectItem.js","data.js","App.js","index.js"],"names":["Cover","styled","div","Body","CardImg","img","Indicator","button","Pager","props","useState","minColor","setMinColor","maxColor","setMaxColor","useEffect","limitObj","id","onClick","moveFront","size","color","src","alt","title","moveEnd","Background","ModalCover","Modal","ModalHeader","Content","Title","p","ModalFooter","ButtonWrap","DetailModal","ref","useRef","handler","listener","event","current","contains","target","console","log","document","addEventListener","removeEventListener","useOnClick","closeModal","idx","setidx","data","setImg","limit","setLimit","ReactDOM","createPortal","isOpen","className","e","stopPropagation","preventDefault","length","getElementById","ButtonBody","DetailContent","DetailBtn","isModalOpen","setModalOpen","classList","url","ProjectBox","ProjectItem","name","description","stack","projects","process","MenuBar","moveTo","querySelectorAll","scrollIntoView","TopMenu","NavGrid","goGit","window","location","CoverBox","LinkBoxContent","LinkBtn","AboutSection","SectionBoxA","SectionSpacer","ProjectSection","SectionBoxB","ProjectInfo","map","project","key","App","GlobalStyle","Component","createGlobalStyle","section","hr","render"],"mappings":"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","file":"static/js/main.1f774146.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\r\n\r\nconst Pager = props => {\r\n  const [minColor, setMinColor] = useState(\"black\");\r\n  const [maxColor, setMaxColor] = useState(\"black\");\r\n\r\n  useEffect(() => {\r\n    if (props.limitObj === \"front\") {\r\n      setMinColor(\"gray\");\r\n      setMaxColor(\"black\");\r\n    } else if (props.limitObj === \"end\") {\r\n      setMinColor(\"black\");\r\n      setMaxColor(\"gray\");\r\n    } else {\r\n      setMinColor(\"black\");\r\n      setMaxColor(\"black\");\r\n    }\r\n  }, [maxColor, props.limitObj]);\r\n\r\n  return (\r\n    <Cover>\r\n      <Indicator id=\"frontIndicator\" onClick={props.moveFront}>\r\n        <IoIosArrowBack size={40} color={minColor} />\r\n      </Indicator>\r\n      <Body>\r\n        <CardImg src={props.img} alt={props.title} />\r\n      </Body>\r\n      <Indicator id=\"endIndicator\" onClick={props.moveEnd}>\r\n        <IoIosArrowForward size={40} color={maxColor} />\r\n      </Indicator>\r\n    </Cover>\r\n  );\r\n};\r\n\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: flex;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  bottom: 0;\r\n`;\r\n\r\nconst CardImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Indicator = styled.button`\r\n  width: 50px;\r\n  height: 100%;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Pager;\r\n","import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Pager from \"./pager\";\r\n\r\nconst DetailModal = props => {\r\n  const ref = useRef();\r\n  useOnClick(ref, props.closeModal);\r\n\r\n  const [idx, setidx] = useState(0);\r\n  const [img, setImg] = useState(props.data[0]);\r\n  const [limit, setLimit] = useState(\"front\");\r\n\r\n  const moveFront = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (idx - 1 >= 0) {\r\n      setidx(idx - 1);\r\n      setLimit(null);\r\n    } else {\r\n      setLimit(\"front\");\r\n    }\r\n  };\r\n\r\n  const moveEnd = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (idx + 1 < props.data.length) {\r\n      setidx(idx + 1);\r\n      setLimit(null);\r\n    } else {\r\n      setLimit(\"end\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"====================================\");\r\n    console.log(\"idx?\", idx);\r\n    console.log(\"====================================\");\r\n\r\n    setImg(props.data[idx]);\r\n  }, [idx, props.data]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <Fragment>\r\n      {props.isOpen ? (\r\n        <Background className=\"close\" onClick={e => props.closeModal(e)}>\r\n          <ModalCover>\r\n            <Modal ref={ref}>\r\n              <ModalHeader>\r\n                <Title>{props.title}</Title>\r\n              </ModalHeader>\r\n              <Content>\r\n                <Pager\r\n                  img={img}\r\n                  moveFront={moveFront}\r\n                  moveEnd={moveEnd}\r\n                  title={props.title}\r\n                  limitObj={limit}\r\n                ></Pager>\r\n              </Content>\r\n              <ModalFooter>\r\n                <ButtonWrap>\r\n                  <button className=\"close\" onClick={e => props.closeModal(e)}>\r\n                    닫기\r\n                  </button>\r\n                </ButtonWrap>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </ModalCover>\r\n        </Background>\r\n      ) : null}\r\n    </Fragment>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n};\r\n\r\nfunction useOnClick(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        console.log(\"====================================\");\r\n        console.log(ref);\r\n        console.log(\"====================================\");\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [handler, ref]); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  margin: 0px auto;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ModalCover = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 60rem;\r\n  height: 40rem;\r\n  /* min-width: 400px;\r\n  min-height: 300px; */\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  position: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\r\n  /* & > * {\r\n    &:first-child {\r\n      margin-top: 16px;\r\n    }\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n  } */\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid #bebebe;\r\n  height: 10%;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 80%;\r\n  margin: 0;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-weight: bold;\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  margin: 0;\r\n  margin-top: 8px;\r\n  button {\r\n    width: 100%;\r\n    padding: 12px 0;\r\n    border-radius: 0 0 10px 10px;\r\n    background-color: #ad7cef;\r\n    font-size: 13px;\r\n    color: white;\r\n    border: 0;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #7f49c8;\r\n    }\r\n    &:active {\r\n      background-color: #7e49c8;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DetailModal;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport DetailModal from \"./detailModal\";\r\n\r\nfunction DetailBtn(props) {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (e.target.classList.contains(\"close\")) {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonBody onClick={openModal}>\r\n      <DetailContent>\r\n        <p>자세히</p>\r\n        <DetailModal\r\n          isOpen={isModalOpen}\r\n          closeModal={closeModal}\r\n          url={props.url}\r\n          title={props.title}\r\n          data={props.data}\r\n        />\r\n      </DetailContent>\r\n    </ButtonBody>\r\n  );\r\n}\r\n\r\nconst ButtonBody = styled.div`\r\n  display: flex;\r\n  width: 100px;\r\n  height: 50px;\r\n  margin: 8px;\r\n\r\n  justify-content: center;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DetailContent = styled.button`\r\n  display: flex;\r\n  width: 100px;\r\n  height: 50px;\r\n  justify-content: center;\r\n  background-color: #ad7cef;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.4s;\r\n\r\n  p {\r\n    text-align: center;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:link,\r\n  &:visited {\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    padding: 15px 40px;\r\n    display: inline-block;\r\n    border-radius: 100px;\r\n    transition: all 0.2s;\r\n    position: absolute;\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n\r\n    width: 100px;\r\n    height: 50px;\r\n    border-radius: 100px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  &:hover {\r\n    &::after {\r\n      background-color: #ad7cef;\r\n\r\n      transform: scaleX(1.4) scaleY(1.6);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst icons = {\r\n  margin: \"0 1rem\",\r\n  cursor: \"pointer\"\r\n};\r\n\r\nexport default DetailBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport DetailBtn from \"./detailBtn\";\r\n\r\nfunction ProjectItem({ id, name, img, description, stack }) {\r\n  return (\r\n    <ProjectBox>\r\n      <h2>{name}</h2>\r\n      <p>{description}</p>\r\n      <h4>- STACK</h4>\r\n      <p>{stack}</p>\r\n      <DetailBtn title={name} data={img} />\r\n    </ProjectBox>\r\n  );\r\n}\r\n\r\nconst ProjectBox = styled.div`\r\n  width: 80%;\r\n  height: fit-content;\r\n  border-bottom: 1px solid black;\r\n  margin: 0 10px;\r\n  img {\r\n    width: 18.75rem;\r\n    height: 14.0625rem;\r\n  }\r\n`;\r\n\r\nProjectItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  img: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  description: PropTypes.string\r\n};\r\n\r\nexport default ProjectItem;\r\n","const projects = [\r\n  {\r\n    id: 0,\r\n    name: \"유튜브 클립 저장소\",\r\n    img: [\r\n      process.env.PUBLIC_URL + \"youtube-cutter.png\",\r\n      process.env.PUBLIC_URL + \"youtube-cutter2.png\",\r\n      process.env.PUBLIC_URL + \"youtube-cutter3.png\"\r\n    ],\r\n    description:\r\n      \"유튜브 영상의 특정 시간대를 저장하고 하나의 목록으로 분류해 관리할 수 있는 페이지. \",\r\n    stack:\r\n      \"create react app, nodejs , graphQL , react router, react hook , grahql apollo, JWT\",\r\n    url: \"http://youtube-cutter.herokuapp.com/\"\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"SquardMaker\",\r\n    img: [\r\n      process.env.PUBLIC_URL + \"squardmaker.png\",\r\n      process.env.PUBLIC_URL + \"squardmaker2.png\",\r\n      process.env.PUBLIC_URL + \"squardmaker3.png\",\r\n      process.env.PUBLIC_URL + \"squardmaker4.png\"\r\n    ],\r\n    description:\r\n      \"축구팀을 위한 명단 제작 사이트. 팀 명단을 만들고 포메이션과 등번호를 정할 수 있다. 본인의 팀 명단을 바둑돌처럼 활용해 전술 구상도 해볼수 있다.\",\r\n    stack: \"vanila js, nodejs redis session , passport, axios \",\r\n    url: \"http://squardmaker.herokuapp.com/\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"\",\r\n    img: [\r\n      process.env.PUBLIC_URL + \"youtube-cutter.png\",\r\n      process.env.PUBLIC_URL + \"squardmaker.png\"\r\n    ],\r\n    description: \"\",\r\n    stack: \"\",\r\n    url: \"\"\r\n  }\r\n];\r\n\r\nexport default projects;\r\n","import React, { Component, Fragment } from \"react\";\nimport styled, { createGlobalStyle, css } from \"styled-components\";\nimport ProjectItem from \"./projectItem\";\nimport ProjectInfo from \"./data\";\n\nfunction MenuBar() {\n  const moveTo = e => {\n    const target = document.querySelectorAll(\".\" + e.target.className)[1];\n    target.scrollIntoView();\n  };\n\n  return (\n    <TopMenu className=\"menu\">\n      <p className=\"linkBox__txt\">PORTPOILO</p>\n      <NavGrid>\n        <div className=\"about\" onClick={e => moveTo(e)}>\n          소개\n        </div>\n        <div className=\"projects\" onClick={e => moveTo(e)}>\n          프로젝트\n        </div>\n      </NavGrid>\n    </TopMenu>\n  );\n}\n\nconst goGit = e => {\n  window.location = \"https://github.com/kth9192\";\n};\n\nfunction CoverBox() {\n  return (\n    <Cover className=\"cover\">\n      <MenuBar />\n      <LinkBoxContent>\n        <LinkBtn onClick={goGit}>\n          <img src=\"gitHub-Mark-32px.png\" alt=\"github\" />\n          <p>GitHub로 이동하기</p>\n        </LinkBtn>\n      </LinkBoxContent>\n    </Cover>\n  );\n}\n\nfunction AboutSection() {\n  return (\n    <SectionBoxA className=\"about\">\n      <h2>About</h2>\n      <SectionSpacer />\n      <div>\n        <p>KIM TAE HOON</p>\n        <p>제주대학교 컴퓨터공학전공 학사 졸업 </p>\n        <p>Email : kth9193@gmail.com</p>\n        <p>Github : https://github.com/kth9192</p>\n      </div>\n    </SectionBoxA>\n  );\n}\n\nfunction ProjectSection() {\n  return (\n    <SectionBoxB className=\"projects\">\n      <h2>Project</h2>\n      <SectionSpacer />\n      {ProjectInfo.map(project => {\n        return (\n          <ProjectItem\n            key={project.id}\n            id={project.id}\n            name={project.name}\n            img={project.img}\n            description={project.description}\n            stack={project.stack}\n          />\n        );\n      })}\n    </SectionBoxB>\n  );\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <GlobalStyle />\n        <CoverBox />\n        <AboutSection />\n        <ProjectSection />\n      </Fragment>\n    );\n  }\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n       font-family: \"NanumBarunGothic\";\n       src: url('font/NanumBarunGothic.ttf') format('truetype');\n     }\n    body {\n        padding: 0;\n        margin: 0;\n        height: 100vh;\n        z-index:1;\n        font-family:나눔고딕, NanumBarunGothic, ng;\n    }\n`;\n\nconst TopMenu = styled.div`\n  display: flex;\n  width: 100%;\n  height: fit-content;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  p {\n    color: white;\n    font-weight: bold;\n    font-size: 50px;\n    border-bottom: 1px solid;\n  }\n`;\n\nconst NavGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 50%;\n  text-align: center;\n  color: white;\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    height: 2rem;\n    &:hover {\n      background-color: #fff;\n      color: #000;\n      font-weight: bold;\n      transition: 400ms ease;\n      transition-property: background-color;\n    }\n  }\n`;\n\nconst Cover = styled.section`\n  display: flex;\n  width: 100%;\n  height: 400px;\n  float: left;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(\"intro-bg.png\");\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst LinkBtn = styled.button`\n  display: flex;\n  width: 80%;\n  height: fit-content;\n  border: 2px white solid;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  text-decoration: none;\n  transition: all 0.5s ease;\n\n  &:hover {\n    color: black;\n    background-color: white;\n    border: 1px black solid;\n    font-weight: bold;\n    img {\n      filter: invert(0);\n    }\n    p {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin: 4px;\n    filter: invert(1);\n  }\n`;\n\nconst LinkBoxContent = styled.div`\n  display: flex;\n  width: 40%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  .linkBox__txt {\n    color: white;\n    font-size: 50px;\n    font-weight: bold;\n  }\n`;\n\nconst SectionBoxA = styled.section`\n  display: flex;\n  width: 100%;\n  background-color: #f8f8f8;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  float: left;\n  p {\n    text-align: center;\n  }\n`;\n\nconst SectionBoxB = styled.section`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  flex-direction: column;\n  float: left;\n`;\nconst SectionSpacer = styled.hr`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  border: 0;\n  width: 300px;\n  border-top: 3px solid #e7e7e7;\n  text-align: center;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}